%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 12.0.1%%For: (Diane) (GELUCK-SUYKENS EN PARTNERS)%%Title: (logo ulb 3 lignes \(petit\).eps)%%CreationDate: 13/10/09 16:30%%BoundingBox: 491 100 620 139%%HiResBoundingBox: 491.3037 100.4531 619.0137 138.9365%%DocumentProcessColors: Cyan Magenta Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKCustomColor: 1 1 1 1 ([Rep\616rage])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 421.5 297.5 421.5 297.5%AI3_TileBox: 7.2002 7.2002 834.7998 587.7998%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 842 595%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -531 824 1 1908 1064 26 0 0 6 73 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 -0.275391%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 40 8%%BeginData: 7950 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD6DFFA92F2FFD10FFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FF%FFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFAFFD48FF532FAFFD10FF2F06%2F072F062F072F062F072F062F072F062F072F062F072F062F072F062F07%2F062F067EFD05FF7E7EFFFF7E7EFFFFFF5A7EFFFF5AA8FFFFFF5AA8FFA9%54A8FFFFA92FFFFFA92F542F5AFFFFFF7E2F5353FD04FFAF2F2F2F84FFFF%FF7E7EFFFF7E2F5A2F2F7EFFFF5A295A2FA9FD0FFF060706070607060706%07060706070607060706070607060706070607060706070607060653FD05%FF0653FFFF0653FFFFFF2F06A8FF2F53FFFFFF067EFFFF0653FFFF2F07FF%FF7E07535A7EFFFFFF062F590729FFFFFF062F7E5A53FFFFFF0653FFFF7E%5A062F59A9FFFF062F537EA8FD0FFF07060D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D067EFD05FF2F53FFFF54%53FFFFFF2F072FFF2F7EFFFFFF2F7EFFFF5A07FFFF2F5AFFFFA807FD06FF%2F53FF7E07A9FFA9077EFD06FF2F53FD04FF2F7EFD04FF2FA8FD12FF0607%060706070607060706070607060706070607060706070607060706070607%0607060753FD05FF065AFFFF295AFFFFFF2F2F077E2F59FFFFFF067EFFFF%A807A8A906A9FFFF7E072F5384FFFFFF0753A82F07FFFFFF29062984FD04%FF0754FD04FF067EFD04FF072F2F7EFD10FF0D0607060D0607060D060706%0D0607060D0607060D0607060D0607060D0607060D0607067EFD05FF2F53%FFFF5353FFFFFF2984532F2F7EFFFFFF2F7EFFFFFF077E532FFFFFFFA906%542FA9FFFFFF2F06072FFD05FF7E2F065AFFFFFF2F53FD04FF2F5AFD04FF%2F2F545AFD10FF0607060706070607060706070607060706070607060706%0706070607060706070607060653FD05FF065AFFFF2953FFFFFF2F59FF06%0759FFFFFF0684FFFFFF5A062F53FFFFFF7E2FFD06FF065A2F2FFD07FF7E%06A9FFFF065AFD04FF067EFD04FF06A8FD12FF0D0607060D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607067EFD05FF2F%29FFA90753FFFFFF297EFF540684FFFFFF2F7EFFFFFFA80706FD04FFA907%FFAFFD04FF2F53FF067EFFFFA9A9FFFF532FFFFFFF2F53FD04FF2F5AFD04%FF2F7EFFA9FD10FF06070607060706070607060706070607060706070607%060706070607060706070607060653FD05FFA807060729FD04FF2F59FFA8%0759FFFFFF06A8FD04FF072FFD04FF7E07060706FFFFFF075AFF7E06AFFF%A9062F07077EFFFFFF075AFD04FF077EFD04FF070706077EFD0FFF07060D%0607060D0607060D0607060D0607060D0607060D0607060D0607060D0607%060D067EFD07FFA9A8FD1BFFA9FFA9FD0DFFA8A9FD12FFA9FFA9FD10FF06%070607060706070607060706070607060706070607060706070607060706%070607060753FD5BFF07060D0607060D0607060D0607060D0607060D0607%060D0607060D0607060D0607060D067EFD5BFF0607060706070607060706%0706070607060706070607060706070607060706070607060753FD5BFF0D%0607060D0607060D060706070607060D0607060D0607060D0607060D0607%060D0607067EFD5BFF060706077EFFA8A97E077EA87EA907A9A8A9A8AF29%070653A8A9A8A9A8A97E2F0607060653FD07FFA9FD53FF0D060706A9FFFF%FFA907FFFFFFA82FA8FFFFFFA92F060753FD08FF2F0607067EFD05FF847E%FD05FF5AAFFFFFAF7E535A7EFD04FF84535A5AFD04FFA9535A2F7EFD35FF%0607060706A8FFFF060707FF7E070607A8FFA8070607060729FFFF5A067E%FFFF2F07060653FD05FF2953FD04FFA8077EFFFFA9062F2F0753FFFFFF07%0753072FFFFFFF530753537EFD35FF07060D06077EFFFF07062FFFA90607%06A9FFAF0607060D062FFFFF530653FFFF53060D067EFD05FF5353FD05FF%06A9FFFFA80DFFFF2F2FFFFFFF2F5AFF7E07FFFFFF5A2FFD38FF06070607%0684FFFF060606FF7E070607A8FFA8070607060729FFFFA853FFFF7E0607%060753FD05FF2954FD04FFA8077EFFFFA9065A53077EFFFFFF0654FF2F06%FFFFFF530D597EA8FD35FF07060D06077EFFFF2F062FFFA9060D06AFFFFF%0607060D0653FD06FF5A07060D067EFD05FF5453FD05FF06A9FFFFA82F2F%53067EFFFFFF5306072FFD04FF7E07542FFD36FF0607060706A8FFFF0606%06FF7E070607A8FFA807060707072FFFFF7E067EFFFF5306060753FD05FF%295AFD04FFA9077EFFFFA906FFFF7E06FFFFFF065A2F2FFD04FF2F53FD38%FF0D0607060784FFA90D062FFFA9060706AFFFA90607537E062FFFFF5307%06FFFFA90607067EFD05FF2F2FFD05FF06A8FFFFA807A8FF5A07A8FFFF2F%53FF067EFFFFFF5A2FFD38FF060706070684FFFF060653FF7E070607A8FF%A8072FA9530629FFFF5A0153FFFF7E07060653FD05FF2F07062F7EFFA807%7EFFFFA90607060759FFFFFF0653FF7E06A9FFFF5307062F2FFD35FF0D06%07060753FFFFFFA8FFFF5A062FA8FFFFFFA9FFFF842FFD08FF530607067E%FD06FFA8A9A8FFFFFFA8FD04FFAFA8A9FD06FFA9FFFFA9A9FFFFFFA8A9A8%A9FD35FF0607060706077EFD04FF5A060707A9A8A9A8A9A8FF592FA8A9A8%A9A8AF7E2F0607060653FD5BFF07060D06070607072F2F2F0607060D0607%060D0607060D0607060D060706070607060D067EFD5BFF06070607060706%070606060706070607060706070607060706070607060706070607060753%FD5BFF07060D0607060D0607060D0607060D0607060D0607060D0607060D%0607060D0607060D067EFD5BFF0607060706070607060706070607060706%0706070607060706070607060706070607060753FD5BFF0D0607060D0607%060D0607060D0607060D0607060D0607060D0607060D0607060D0607067E%FD05FFA8535A7EFD05FF535A535AA9FD06FFA8535A5AFD04FFA9535A59FD%04FFA85AFFFFA97EFFFFA953FFFF8459FFFFFF595A5354A8FFFFA85AFD05%FF7EA9FD04FFA87E535453FD04FF7E2F5AA8060706070607060706070607%06070607060706070607060706070607060706070607060653FD05FF2907%530729FFFFFFA806295453FD07FF29072F0707FFFFFF59062F2F06A9FFFF%2F07FFFF5307FFFFA80653FF0653FFFFA80606542FA9FFFF2F07FD05FF0D%53FD04FF7E06532F5AA8FFFF2F067E29530D0607060D0607060D0607060D%0607060D0607060D0607060D0607060D0607060D0607067EFD05FF2F53FF%FF075AFFFFA906FD0AFF2F59FFA807A8FFFF7E07FFFF075AFFFF5A07FFFF%7E29FFFFFF7E2F2F2FFD04FF06AFFD05FF5A07FD05FF2F7EFD04FF7E2FFD%05FFAF06A9FFFFFF06070607060706070607060706070607060706070607%060706070607060706070607060653FD05FF2F53FFFF2F2FFFFFA8075384%A8FD07FF2F2F7E2F2FFFFFFF5A07A9A806A8FFFF532FFFFF592FFD04FF29%077EFFFFFFA9075384A8FFFFFF532FFD05FF2F59FD04FF84067E7EA9FFFF%FF07067EA8FF07060D0607060D0607060D0607060D0607060D0607060D06%07060D0607060D0607060D067EFD05FF5353FFFF542FFFFFAF062F0784FD%07FF5A062F0654FFFFFF7E0607067EFFFFFF5A29FFFF7E2FFD04FF5306A9%FD04FF072F297EFFFFFF5A29FD05FF297EFD04FF7E07292F7EFFFFFFA953%06075A060706070607060706070607060706070607060706070607060706%07060706070607060753FD05FF295AFFFF2853FFFF8407A8FD09FF295AFF%FF067EFFFF532F5307A8FFFFFF2F2FFFFF532FFFFFFFA8062F06FFFFFFA8%077EFD05FF2F2FFD05FF2F53FD04FF8406FD09FF2F0707060D0607060D06%07060D0607060D0607060D0607060D0607060D0607060D0607060D067EFD%05FF5453FF840D7EFFFFAF06A9FD09FF5353FFA90D5AFFFF7E07FF2F2FFF%FFFF7E07FFFF5429FFFFFF075AFF0D5AFFFFFF06A8FD05FF5A29FD05FF29%7EFD04FF7E07A9FD05FFA9FFFF84FD040607060606070606060706060607%06060607060606070606060706060607FD040653FD05FF2F07290753FFFF%FFA807060706A9FD06FF2F072F0706FFFFFF530DFFAF067EFFFFA82F062F%0684FFFF5307A8FF5307A8FFA807060D0684FFFF5307292F59FFFF2F062F%29A9FFA80607062FA8FF7E0D292F067E5A2F542F5A2F542F5A2F542F5A2F%542F5A2F542F5A2F542F5A2F542F5A2F542F5A2F542FA8FD05FFA97E84A9%FD05FF7EA87E84A9FD06FFA97E84A8FD05FF7EFFFFA984FFFFFFA97E7EAF%FFFFFFA984FFFFFF7EFFFFFF7EA87E84A8FFFFFF7E847EA9FFFFA8847E84%FFFFA9A97E847EFFFFFFA87E5AA9FD80FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Vectorisation) (Vectorisation.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module externe Adobe Forme diffuse) (Forme diffuse.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module externe Adobe Forme diffuse) (Forme diffuse.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Module externe D\216grad\216 de formes Adobe) (D\216grad\216s.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module externe Adobe Forme de motif) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module externe Adobe Forme de motif) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module externe Forme artistique Adobe) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module externe Forme artistique Adobe) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Module externe Forme calligraphique Adobe) (Forme calligraphique.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Halo.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Symbolisme Adobe) (Symbolisme.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Module externe Adobe Enveloppe) (Enveloppe et d\216formation.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Forme compos\216e Adobe) (Extension Pathfinder.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Module externe Peinture dynamique d'Adobe) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Rep\616rage]) 0 Xs([Rep\616rage])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Calque 1) Ln0 Auu0 O1 0.68 0 0.12 k0 J 0 j 1 w 4 M []0 d0 XR491.3037 136.7959 m527.6475 136.7959 L527.6475 100.4531 L491.3037 100.4531 l491.3037 136.7959 LfUq491.3037 100.4531 m527.6475 100.4531 L527.6475 136.7959 L491.3037 136.7959 l491.3037 100.4531 LhWn0 O1 0.68 0 0.12 k491.3037 136.7959 m527.6475 136.7959 L527.6475 100.4531 L491.3037 100.4531 l491.3037 136.7959 LfQ0 A0 O0.35 0.2 0 0 k0 J 0 j 1 w 4 M []0 d0 XR511.2031 114.8115 m513.8936 114.8115 L513.8936 117.5029 L511.2031 114.8115 LF0 0 0 0 k506.2256 123.751 m506.2256 122.1621 L507.4971 122.1621 L507.4971 114.752 L506.2256 114.752 L506.2256 113.1631 L513.8936 113.1631 L513.8936 114.8115 L510.0195 114.8115 L510.0195 122.1621 L511.4297 122.1621 L511.4297 123.751 L506.2256 123.751 LF502.7871 113.5693 m503.7344 114.334 503.9395 115.1797 503.9395 116.459 C503.9375 122.1309 L505.2695 122.1328 L505.2695 123.7217 L501.3555 123.7197 L501.3555 122.1309 L502.1914 122.1328 L502.1914 116.1914 l502.1914 115.3574 501.5117 114.6836 500.6787 114.6826 c499.5898 114.6816 499.1699 115.3594 499.1699 116.1924 C499.1699 122.1338 L500.0449 122.1328 L500.1172 123.7217 L495.4688 123.7217 L495.3975 122.1328 L496.6426 122.1328 L496.6484 116.5898 l496.6484 115.4434 496.6689 114.7822 497.2773 113.9414 c497.8223 113.1855 498.7715 112.8184 500.2881 112.8213 c501.3555 112.8242 502.1875 113.085 502.7871 113.5693 CF*u1 D519.6973 114.8105 m520.7764 114.8164 521.2656 115.3486 521.2686 116.291 c521.2715 117.2617 520.6182 117.9297 519.6934 117.9316 C518.6855 117.9307 L518.6875 114.8105 L519.6973 114.8105 LF519.5654 119.4619 m520.4268 119.459 520.9092 119.9707 520.9111 120.79 c520.9141 121.6338 520.3672 122.1611 519.5625 122.1631 C518.6875 122.1621 L518.6875 119.46 L519.5654 119.4619 Lf0 D522.7148 118.4824 m523.4531 117.9688 523.9375 117.1279 523.9424 116.1133 c523.9502 114.5234 522.3438 113.1621 520.8623 113.1641 C514.8945 113.1631 L514.8926 114.8115 L516.1055 114.8115 L516.1055 122.1621 L514.834 122.1621 L514.834 123.751 L520.873 123.751 l522.3564 123.751 523.5586 122.5938 523.5586 121.1484 c523.5586 120.4922 523.2324 119.7188 522.7109 119.2412 C521.998 118.7959 L522.7148 118.4824 Lf*Uuu*u1 0.68 0 0.12 k538.2344 129.7529 m537.8516 129.2822 537.2285 128.8672 536.0693 128.8672 c534.9326 128.8672 534.1777 129.2275 533.7949 129.917 c533.5986 130.2666 533.5547 130.4746 533.5547 131.2617 c533.5547 136.5205 L534.6152 136.5205 L534.6152 131.6553 L534.6152 131.1084 534.6699 130.4414 534.8887 130.1895 c535.0967 129.9492 535.4785 129.7637 536.0801 129.7637 c536.6494 129.7637 537.0645 129.9385 537.3047 130.2559 c537.4912 130.4961 537.5781 130.9004 537.5781 131.502 c537.5781 136.5205 L538.6279 136.5205 L538.6279 131.3486 l538.6279 130.3975 538.5732 130.168 538.2344 129.7529 cf*UUu*u546.3779 128.9873 m544.3984 132.9883 L544.0156 133.7646 543.6221 134.6182 543.4805 135.0547 c543.4141 135.0439 L543.4688 134.3994 543.4912 133.6445 543.502 132.9453 c543.5459 128.9873 L542.4854 128.9873 L542.4854 136.5205 L543.71 136.5205 L545.8086 132.3652 L546.126 131.7422 546.498 130.7695 546.5527 130.5615 c546.6182 130.584 L546.5967 130.8018 546.5088 131.9941 546.5088 132.8252 c546.4873 136.5205 L547.5039 136.5205 L547.5039 128.9873 L546.3779 128.9873 lf*UUu*u551.3203 128.9873 m551.3203 136.5205 L552.3916 136.5205 L552.3916 128.9873 L551.3203 128.9873 lf*UUu*u558.6025 128.9658 m557.5742 128.9658 L555.0596 136.5205 L556.2188 136.5205 L557.6621 132.0156 L557.749 131.7529 557.8691 131.3486 557.9463 131.0205 c558.001 130.7803 558.0449 130.6055 558.0664 130.4521 c558.1318 130.4521 L558.165 130.6055 558.209 130.7471 558.2852 131.0205 c558.373 131.3271 558.46 131.6113 558.5908 132.0264 c560.0674 136.5205 L561.1611 136.5205 L558.6025 128.9658 lf*UUu*u563.9053 128.9873 m563.9053 136.5205 L568.0049 136.5205 L567.8633 135.6563 L564.9658 135.6563 L564.9658 133.3604 L567.3926 133.3604 L567.3926 132.4746 L564.9766 132.4746 L564.9766 129.8945 L568.126 129.8945 L568.126 128.9873 L563.9053 128.9873 lf*UUu*u575.1104 128.9873 m574.8916 129.4141 574.7939 129.5889 574.4873 130.1025 c573.9082 131.0645 573.7217 131.3818 573.1865 131.9834 c572.9893 132.2012 572.8252 132.3105 572.5088 132.3223 c572.5088 128.9873 L571.459 128.9873 L571.459 136.5205 L573.5693 136.5205 L574.4658 136.5205 574.9902 136.3125 575.3516 135.9736 c575.6904 135.6563 576.0186 135.1533 576.0186 134.4209 c576.0186 133.251 575.2637 132.3105 574.0059 132.3545 c574.3564 132.0703 574.5313 131.8301 574.6621 131.6553 c574.8154 131.4473 575.0449 131.1191 575.2969 130.7256 c575.625 130.2119 576.2373 129.2275 576.3896 128.9873 C575.1104 128.9873 lf1 D574.2139 135.5146 m573.9951 135.6016 573.6895 135.6563 573.2959 135.6563 c572.5088 135.6563 L572.5088 133.0322 L573.2412 133.0322 L573.9082 133.0322 574.2793 133.1416 574.542 133.3936 c574.7715 133.6123 574.9141 133.9727 574.9141 134.4102 c574.9141 134.9346 574.6299 135.3506 574.2139 135.5146 cf*UUu*u0 D581.2656 128.8447 m580.4014 128.8447 579.5703 129.0635 578.8379 129.5117 c579.2529 130.3213 L579.9092 129.917 580.5322 129.6982 581.2871 129.6982 c582.2715 129.6982 582.916 130.2012 582.916 131.0098 c582.916 131.6221 582.5117 132.0488 581.6699 132.2891 c580.8828 132.5186 L579.7451 132.8467 579.1006 133.3936 579.1006 134.4648 c579.1006 135.7656 580.1064 136.6514 581.5928 136.6514 c582.4238 136.6514 583.2334 136.4111 583.9004 135.9404 c583.4297 135.1973 L582.7305 135.624 582.2598 135.7871 581.6367 135.7871 c580.7949 135.7871 580.2705 135.3506 580.2705 134.6504 c580.2705 134.1152 580.5762 133.8086 581.3857 133.5684 c582.2715 133.3057 L583.2773 133.0107 584.1084 132.3545 584.1084 131.1846 c584.1084 130.1357 583.2441 128.8447 581.2656 128.8447 cf*UUu*u587.4199 128.9873 m587.4199 136.5205 L588.4912 136.5205 L588.4912 128.9873 L587.4199 128.9873 lf*UUu*u596.2871 135.6455 m594.3301 135.6455 L594.3301 128.9873 L593.291 128.9873 L593.291 135.6455 L591.334 135.6455 L591.334 136.5205 L596.3965 136.5205 L596.2871 135.6455 lf*UUu*u599.1963 128.9873 m599.1963 136.5205 L603.2959 136.5205 L603.1543 135.6563 L600.2568 135.6563 L600.2568 133.3604 L602.6836 133.3604 L602.6836 132.4746 L600.2676 132.4746 L600.2676 129.8945 L603.417 129.8945 L603.417 128.9873 L599.1963 128.9873 lf600.4209 136.8916 m600.1035 137.4824 L602.3008 138.9365 L602.793 138.0068 L600.4209 136.8916 lf*UUu*u537.3594 114.9307 m533.5986 114.9307 L533.5986 122.4639 L534.6699 122.4639 L534.6699 115.8057 L537.5342 115.8057 L537.3594 114.9307 lf*UUu*u540.3008 114.9307 m540.3008 122.4639 L541.3721 122.4639 L541.3721 114.9307 L540.3008 114.9307 lf*UUu*u548.665 115.0508 m548.3262 114.9639 547.8672 114.9307 547.4736 114.9307 c545.1777 114.9307 L545.1777 122.4639 L546.7734 122.4639 L548.042 122.4639 548.3809 122.4307 548.8516 122.1797 c549.5186 121.8291 549.8682 121.2939 549.8682 120.6045 c549.8682 119.8174 549.4199 119.2168 548.501 118.9434 c549.6387 118.6914 550.1855 117.9805 550.1855 116.9971 c550.1855 115.9473 549.54 115.2803 548.665 115.0508 cf1 D547.998 121.501 m547.8232 121.5557 547.6152 121.5781 547.2334 121.5781 c546.2051 121.5781 L546.2051 119.2822 L547.3975 119.2822 L548.0645 119.2822 548.2939 119.4023 548.5127 119.6973 c548.6543 119.8945 548.7314 120.1787 548.7314 120.4297 c548.7314 120.9551 548.4355 121.3701 547.998 121.501 cf548.2168 118.3418 m548.0205 118.3857 547.8018 118.4072 547.4297 118.4072 c546.2158 118.4072 L546.2158 115.7832 L547.7031 115.7832 L548.3262 115.7832 549.0264 116.1553 549.0264 117.1172 c549.0264 117.7295 548.6875 118.2324 548.2168 118.3418 cf*UUu*u0 D557.1611 114.9307 m556.9424 115.3574 556.8447 115.5322 556.5381 116.0459 c555.959 117.0078 555.7725 117.3252 555.2373 117.9268 c555.04 118.1445 554.876 118.2539 554.5596 118.2656 c554.5596 114.9307 L553.5098 114.9307 L553.5098 122.4639 L555.6201 122.4639 L556.5166 122.4639 557.041 122.2559 557.4023 121.917 c557.7412 121.5996 558.0693 121.0967 558.0693 120.3643 c558.0693 119.1943 557.3145 118.2539 556.0566 118.2979 c556.4072 118.0137 556.582 117.7734 556.7129 117.5986 c556.8662 117.3906 557.0957 117.0625 557.3477 116.6689 c557.6758 116.1553 558.2881 115.1709 558.4404 114.9307 C557.1611 114.9307 lf1 D556.2646 121.458 m556.0459 121.5449 555.7402 121.5996 555.3467 121.5996 c554.5596 121.5996 L554.5596 118.9756 L555.292 118.9756 L555.959 118.9756 556.3301 119.085 556.5928 119.3369 c556.8223 119.5557 556.9648 119.916 556.9648 120.3535 c556.9648 120.8779 556.6807 121.2939 556.2646 121.458 cf*UUu*u0 D561.666 114.9307 m561.666 122.4639 L565.7656 122.4639 L565.624 121.5996 L562.7266 121.5996 L562.7266 119.3037 L565.1533 119.3037 L565.1533 118.418 L562.7373 118.418 L562.7373 115.8379 L565.8867 115.8379 L565.8867 114.9307 L561.666 114.9307 lf*UUu*u538.0156 101.8906 m537.4912 101.2344 536.791 100.874 535.4785 100.874 c533.5986 100.874 L533.5986 108.4072 L535.3477 108.4072 L536.6494 108.4072 537.4795 108.1113 538.1689 107.1602 c538.6172 106.5371 538.8359 105.6738 538.8359 104.6348 c538.8359 103.4102 538.5186 102.5137 538.0156 101.8906 cf1 D537.1084 106.8984 m536.6924 107.4229 536.2549 107.5654 535.5225 107.5654 c534.6699 107.5654 L534.6699 101.7373 L535.501 101.7373 L536.3643 101.7373 536.9219 101.9678 537.2617 102.5791 c537.5342 103.082 537.666 103.7607 537.666 104.5039 c537.666 105.5537 537.5566 106.3291 537.1084 106.8984 cf*UUu*u0 D542.1523 100.874 m542.1523 108.4072 L546.252 108.4072 L546.1104 107.543 L543.2129 107.543 L543.2129 105.2471 L545.6396 105.2471 L545.6396 104.3613 L543.2236 104.3613 L543.2236 101.7813 L546.373 101.7813 L546.373 100.874 L542.1523 100.874 lf*UUu*u557.0254 100.9941 m556.6865 100.9072 556.2275 100.874 555.834 100.874 c553.5381 100.874 L553.5381 108.4072 L555.1338 108.4072 L556.4023 108.4072 556.7412 108.374 557.2119 108.123 c557.8789 107.7725 558.2285 107.2373 558.2285 106.5479 c558.2285 105.7607 557.7803 105.1602 556.8613 104.8867 c557.999 104.6348 558.5459 103.9238 558.5459 102.9404 c558.5459 101.8906 557.9004 101.2236 557.0254 100.9941 cf1 D556.3584 107.4443 m556.1836 107.499 555.9766 107.5215 555.5938 107.5215 c554.5654 107.5215 L554.5654 105.2256 L555.7578 105.2256 L556.4248 105.2256 556.6543 105.3457 556.873 105.6406 c557.0146 105.8379 557.0918 106.1221 557.0918 106.373 c557.0918 106.8984 556.7959 107.3135 556.3584 107.4443 cf556.5771 104.2852 m556.3809 104.3291 556.1621 104.3506 555.79 104.3506 c554.5762 104.3506 L554.5762 101.7266 L556.0635 101.7266 L556.6865 101.7266 557.3867 102.0986 557.3867 103.0605 c557.3867 103.6729 557.0479 104.1758 556.5771 104.2852 cf*UUu*u0 D565.5215 100.874 m565.3027 101.3008 565.2051 101.4756 564.8984 101.9893 c564.3193 102.9512 564.1328 103.2686 563.5977 103.8701 c563.4004 104.0879 563.2363 104.1973 562.9199 104.209 c562.9199 100.874 L561.8701 100.874 L561.8701 108.4072 L563.9805 108.4072 L564.877 108.4072 565.4014 108.1992 565.7627 107.8604 c566.1016 107.543 566.4297 107.04 566.4297 106.3076 c566.4297 105.1377 565.6748 104.1973 564.417 104.2412 c564.7676 103.957 564.9424 103.7168 565.0732 103.542 c565.2266 103.334 565.4561 103.0059 565.708 102.6123 c566.0361 102.0986 566.6484 101.1143 566.8008 100.874 C565.5215 100.874 lf1 D564.625 107.4014 m564.4063 107.4883 564.1006 107.543 563.707 107.543 c562.9199 107.543 L562.9199 104.9189 L563.6523 104.9189 L564.3193 104.9189 564.6904 105.0283 564.9531 105.2803 c565.1826 105.499 565.3252 105.8594 565.3252 106.2969 c565.3252 106.8213 565.041 107.2373 564.625 107.4014 cf*UUu*u0 D574.4229 101.6396 m574.04 101.1689 573.417 100.7539 572.2578 100.7539 c571.1211 100.7539 570.3662 101.1143 569.9834 101.8037 c569.7871 102.1533 569.7432 102.3613 569.7432 103.1484 c569.7432 108.4072 L570.8037 108.4072 L570.8037 103.542 L570.8037 102.9951 570.8584 102.3281 571.0771 102.0762 c571.2852 101.8359 571.667 101.6504 572.2686 101.6504 c572.8379 101.6504 573.2529 101.8252 573.4932 102.1426 c573.6797 102.3828 573.7666 102.7871 573.7666 103.3887 c573.7666 108.4072 L574.8164 108.4072 L574.8164 103.2354 l574.8164 102.2842 574.7617 102.0547 574.4229 101.6396 cf*UUu*u582.0693 100.874 m580.374 104.1104 L578.7451 100.874 L577.4658 100.874 L579.7402 104.9297 L577.7285 108.4072 L579.0068 108.4072 L580.3633 105.8486 L581.6533 108.4072 L582.9111 108.4072 L581.0078 104.9961 L583.3486 100.874 L582.0693 100.874 lf*UUu*u586.1797 100.874 m586.1797 108.4072 L590.2793 108.4072 L590.1377 107.543 L587.2402 107.543 L587.2402 105.2471 L589.667 105.2471 L589.667 104.3613 L587.251 104.3613 L587.251 101.7813 L590.4004 101.7813 L590.4004 100.874 L586.1797 100.874 lf*UUu*u597.4297 100.874 m593.6689 100.874 L593.6689 108.4072 L594.7402 108.4072 L594.7402 101.749 L597.6045 101.749 L597.4297 100.874 lf*UUu*u604.0898 100.874 m600.3291 100.874 L600.3291 108.4072 L601.4004 108.4072 L601.4004 101.749 L604.2646 101.749 L604.0898 100.874 lf*UUu*u606.8555 100.874 m606.8555 108.4072 L610.9551 108.4072 L610.8135 107.543 L607.916 107.543 L607.916 105.2471 L610.3428 105.2471 L610.3428 104.3613 L607.9268 104.3613 L607.9268 101.7813 L611.0762 101.7813 L611.0762 100.874 L606.8555 100.874 lf*UUu*u616.1699 100.7314 m615.3066 100.7314 614.4756 100.9502 613.7432 101.3984 c614.1582 102.208 L614.8145 101.8037 615.4375 101.585 616.1924 101.585 c617.1768 101.585 617.8213 102.0879 617.8213 102.8965 c617.8213 103.5088 617.417 103.9355 616.5752 104.1758 c615.7881 104.4053 L614.6504 104.7334 614.0059 105.2803 614.0059 106.3516 c614.0059 107.6523 615.0117 108.5381 616.498 108.5381 c617.3291 108.5381 618.1387 108.2979 618.8057 107.8271 c618.335 107.084 L617.6357 107.5107 617.165 107.6738 616.542 107.6738 c615.7002 107.6738 615.1758 107.2373 615.1758 106.5371 c615.1758 106.002 615.4814 105.6953 616.291 105.4551 c617.1768 105.1924 L618.1826 104.8975 619.0137 104.2412 619.0137 103.0713 c619.0137 102.0225 618.1494 100.7314 616.1699 100.7314 cf*UUUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF